@using Entities.Concrete
@model List<Blog>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}
<section class="main-content-w3layouts-agileits">
    <div class="container">
        <h3 class="tittle">Blog Posts</h3>
        <div class="inner-sec">
            <!--left-->
            <div class="left-blog-info-w3layouts-agileits text-left">
                <div class="row">
                    @foreach (var item in Model)
                    {
                        <div class="col-lg-4 card">
                            <a href="single.html">
                                <img src="@item.Image" class="card-img-top img-fluid" alt="">
                            </a>
                            <div class="card-body">
                                <ul class="blog-icons my-4">
                                    <li>
                                        <a href="#">
                                            <i class="far fa-calendar-alt"></i> @(((DateTime)item.CreateDate).ToString("dd-MMM-yyyy"))
                                        </a>
                                    </li>
                                    <li class="mx-2">
                                        <a href="#">
                                            <i class="far fa-comment"></i> 0
                                        </a>
                                    </li>
                                    <li>
                                        <a href="#">
                                            <i class="fas fa-eye"></i> @item.Category.Name
                                        </a>
                                    </li>

                                </ul>
                                <h5 class="card-title">
                                    <a href="/Blog/ReadAll/">@item.Title</a>
                                </h5>
                                <p>
                                    @{
                                        var content = item.Content;
                                        if (content.Length > 130)
                                        {
                                            var truncatedContent = content.Substring(0, Math.Min(130, content.Length));
                                            var lastSpaceIndex = truncatedContent.LastIndexOf(" ");
                                            if (lastSpaceIndex != -1)
                                            {
                                                truncatedContent = truncatedContent.Substring(0, lastSpaceIndex);
                                            }
                                            <text>@truncatedContent...</text>
                                        }
                                        else
                                        {
                                            <text>@content</text>
                                        }
                                    }
                                </p>
                                <a href="/Blog/ReadAll/@item.ID" class="btn btn-primary read-m">Read More</a>
                            </div>
                        </div>
                    }
                </div>
                <!--//left-->
            </div>
        </div>
    </div>
</section>